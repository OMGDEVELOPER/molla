{%- if template.suffix == 'sub_menu' -%}
  {%- assign position_sub = canonical_url | split: '?q=sub_menu_' | last | plus: 0 -%}
  {%- render 'menu_import_sub', position_sub: position_sub -%}
{%- else -%}
<!-- header.liquid -->
{%- style -%}
{%- capture header_css -%}
.header.style-14 .box-search.show-icon .kt--drop-in {
  border: 0.1rem solid #ebebeb;
}
.header.style-14 .box-search .search {
  border-radius: 50px;
}
.header.style-14 .block-info .infor, .header.style-14 .list-link {
  text-transform: uppercase;
}
.header.style-14 .box-search.show-icon .control .button-search {
  color: #333;
}
.header.style-14 .box-search.show-input .control {
  background-color: transparent;
  border: 0.1rem solid #ebebeb;
  border-radius: 5px;
  margin-bottom: 1rem;
}
.header.style-14 .box-search.show-input .search {
  font-style: normal;
}
.header.style-14 .box-search.show-input-line {
  border-bottom: thin solid #ccc;
  border-radius: 0;
  width: 270px;
}
.header.style-14 .box-search.show-input-line .button-search {
  font-size: 2.2rem;
}
.header.style-14 .box-search.show-input-line .search::placeholder {
  color: #777;
}
.header.style-14 .box-search.show-input-line .search::-webkit-input-placeholder {
  color: #777;
}
{%-endcapture-%}
{{- header_css | strip_newlines | remove: '  ' | remove: '  ' -}}

.content_{{section.id}}{margin-top: {{section.settings.header_margin_top | default: '0' | split: '|' | first }};margin-bottom: {{section.settings.header_margin_bottom | default: '0' | split: '|' | first }};padding: {{section.settings.header_padding | default: '0'| split: '|' | first | replace : '-',' '}};}{{--}}
.header-top{padding: {{- section.settings.header_top_padding | default: '0' | split: '|' | first | replace : '-',' '-}};margin-top: {{- section.settings.header_top_margin_top | default: '0'| split: '|' | first -}};margin-bottom: {{- section.settings.header_top_margin_bottom | default: '0' | split: '|' | first -}};background-position: center;}{{--}}
.header-announcement{display: none;padding: {{section.settings.announcement_padding | default: '0' | split: '|' | first | replace : '-',' '}};margin-top: {{section.settings.announcement_margin_top | default: '0'| split: '|' | first }};margin-bottom: {{section.settings.announcement_margin_bottom | default: '0' | split: '|' | first }};background-position: center;}
{%- endstyle -%}
<header {%if settings.use_wrap_container %}class="wrap-container" {%endif%}data-section-id="{{ section.id }}" data-section-type="header-section" data-header-sticky="{{section.settings.sticky_menu}}">
  <div id="header-ontop" class="header-ontop is-sticky"></div>
  <div id="header" class="custom-header header style-14{%if settings.use_header_mobile_search_box%} mobile-search-box{%endif%}">
    <div class="content_{{section.id}}{%if section.settings.header_image%} bg-image lazyload{%endif%}"{%if section.settings.header_image%} data-bgset="{{section.settings.header_image | img_url: 'master'}}" data-sizes="auto" data-parent-fit="contain"{%endif%} data-respon="{'el':'.content_{{section.id}}','mt':'{{section.settings.header_margin_top}}','mb':'{{section.settings.header_margin_bottom}}','p':'{{section.settings.header_padding}}'}">
      {%- assign announcements = section.blocks | where: "type", "announcement" | first -%}
      {%- assign top_menus = section.blocks | where: "type", "top_menu" | first -%}
      {%- if section.settings.use_header_announcement and announcements -%}
        {%- render 'kt_header-announcement' -%}
      {%- endif -%}
      {%- if section.settings.use_header_top and top_menus -%}
        {%- render 'kt_header-top' -%}
      {%- endif -%}
      {% comment %}
      {%- render 'header-14' -%}
      {% endcomment %}
      {%- render 'main-header', cart:cart -%}
      <div class="header-group">
        {%- render 'nav-menu' -%}
        {%- render 'submenu' -%}
      </div>
    </div>
  </div>
</header>
{%- endif -%}

{% schema %}
  {
  "name": "Header + Announcement",
  "settings": [
    {
      "type": "header",
      "content": "Announcement"
    },
  ],
  "blocks": [
  
  ]
}
{% endschema %}