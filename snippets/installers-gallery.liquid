{% style %}
  .our-works {
    position: relative;
  }

  .masonry-grid {
    position: relative;
    width: 100%;
  }

  .masonry-item {
    position: absolute;
    transition: all 0.3s ease;
  }

  .masonry-img {
    display: block;
    height: auto;
    width: auto;
    max-width: 100%;
    padding: 5px;
  }
.our-works h1{
    color: #000;
    font-family: Karla;
    font-size: 24px;
    font-style: normal;
    font-weight: 600;
    line-height: 24px; /* 100% */
    margin-bottom: 48px;
    margin-top: 96px;
}
.our-works p{
    color: #000;
    font-family: Karla;
    font-size: 16px;
    font-style: normal;
    font-weight: 400;
    line-height: 24px; /* 150% */
}
{% endstyle %}

<div class="our-works">
  <h1>Our Works</h1>
  <p>{{ section.settings.our_works }}</p>
  <div class="masonry-grid">
    {% assign galleries = metaobject.gallery.value %}
    {% for media in galleries %}
      {% assign image = media | image %}
      <div class="masonry-item">
        <img class="masonry-img" src="{{ image | image_url: width: 800 }}" alt="{{ image.alt | escape }}" />
      </div>
    {% endfor %}
  </div>
</div>

<script>
  document.addEventListener("DOMContentLoaded", function () {
    const grid = document.querySelector(".masonry-grid");
    const items = Array.from(grid.querySelectorAll(".masonry-item"));
    const gutter = 15;

    function getColumnCount() {
      const width = window.innerWidth;
      if (width < 640) return 1;
      if (width < 1024) return 2;
      return 3;
    }

    function layoutItems() {
      const columnCount = getColumnCount();
      let columnHeights = Array(columnCount).fill(0);
      const columnWidth = grid.clientWidth / columnCount;

      items.forEach(item => {
        const img = item.querySelector("img");
        const naturalWidth = img.naturalWidth;
        const naturalHeight = img.naturalHeight;

        const scale = Math.min(columnWidth / naturalWidth, 1); // Shrink only
        const width = naturalWidth * scale;
        const height = naturalHeight * scale;

        img.style.width = `${width}px`;
        img.style.height = `${height}px`;

        let col = columnHeights.indexOf(Math.min(...columnHeights));
        const x = col * columnWidth;
        const y = columnHeights[col];

        item.style.transform = `translate(${x}px, ${y}px)`;
        columnHeights[col] += height + gutter;
      });

      grid.style.height = `${Math.max(...columnHeights)}px`;
    }

    function waitForImages(callback) {
      let loaded = 0;
      const total = items.length;
      items.forEach(item => {
        const img = item.querySelector("img");
        if (img.complete) {
          loaded++;
          if (loaded === total) callback();
        } else {
          img.onload = () => {
            loaded++;
            if (loaded === total) callback();
          };
        }
      });
    }

    waitForImages(layoutItems);
    window.addEventListener("resize", layoutItems);
  });
</script>
