{% style %}
  .our-works {
    position: relative;
  }

  .masonry-grid {
    position: relative;
    width: 100%;
  }

  .masonry-item {
    position: absolute;
    transition: all 0.3s ease;
  }

  .masonry-img {
    display: block;
    height: auto;
    width: auto; /* Keep original image size */
    max-width: 100%; /* Prevent overflow */
  }
  .masonry-img{ padding:5px; }
{% endstyle %}

<div class="our-works">
  <h1>Our Works</h1>
  <div class="masonry-grid">
    {% assign galleries = metaobject.gallery.value %}
    {% for media in galleries %}
      {% assign image = media | image %}
      <div class="masonry-item">
        <img class="masonry-img" src="{{ image | image_url: width: 800 }}" alt="{{ image.alt | escape }}" />
      </div>
    {% endfor %}
  </div>
</div>
<script>
  document.addEventListener("DOMContentLoaded", function () {
    const grid = document.querySelector(".masonry-grid");
    const items = Array.from(grid.querySelectorAll(".masonry-item"));
    const columnCount = 3;
    const gutter = 15;

    let columnHeights = Array(columnCount).fill(0);
    let columnWidth = grid.clientWidth / columnCount;

    function layoutItems() {
      columnHeights = Array(columnCount).fill(0);

      items.forEach((item) => {
        const img = item.querySelector('img');
        const naturalWidth = img.naturalWidth;
        const naturalHeight = img.naturalHeight;
        const scale = Math.min(columnWidth / naturalWidth, 1); // only shrink if needed

        const width = naturalWidth * scale;
        const height = naturalHeight * scale;

        img.style.width = `${width}px`;
        img.style.height = `${height}px`;

        // Find shortest column
        let col = columnHeights.indexOf(Math.min(...columnHeights));
        const x = col * columnWidth;
        const y = columnHeights[col];

        item.style.transform = `translate(${x}px, ${y}px)`;

        columnHeights[col] += height + gutter;
      });

      // Set grid height
      grid.style.height = `${Math.max(...columnHeights)}px`;
    }

    // Wait for all images to load
    let loaded = 0;
    const total = items.length;
    items.forEach((item) => {
      const img = item.querySelector('img');
      if (img.complete) {
        loaded++;
        if (loaded === total) layoutItems();
      } else {
        img.onload = () => {
          loaded++;
          if (loaded === total) layoutItems();
        };
      }
    });

    window.addEventListener('resize', layoutItems);
  });
</script>
