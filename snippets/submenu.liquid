{% style %}
  .submenu__items,
  .submenu-subitems {
    list-style: none;
    margin: 0;
    padding: 0;
  }

  .submenu__items > li,
  .submenu-subitems > li {
    /* position: relative; */
  }

  .style-2 {
    position: absolute;
    top: 0;
    left: 100%;
    background: white;
    min-width: 220px;
    z-index: 10;
    padding:0px;
  }

  .submenu__items > li:hover > .style-2,
  .style-2 .submenu__items > li:hover > .submenu-subitems {
    /* display: block; */
  }

  .submenu-subitems-inner {
    left: 100%;
    top: 0;
  }

  /* Add transition for smoothness */
  .style-2,
  .submenu-subitems,
  .submenu-subitems-inner {
    transition: opacity 0.2s ease, visibility 0.2s ease;
  }
  .uppercase{
    text-transform:uppercase;
  }

{% endstyle %}
<submenu>
  <div class="submenu submenu-container container {{ block.id }}" id="{{ block.id }}">
    <div class="row">
                <div class="col-12 col-md-3 item item__1">
            <div class="item__1__group">
              <div class="submenu__heading">
                  <h3 class="heading__1">{{ block.settings.item_label }}</h3>
              </div>
              <ul class="submenu__items lvl-1" >
                {% assign menu_index = (1..15) %}
                {% for i in menu_index %}
                    {% assign label_key = "item-" | append: i | append: "-label" %}
                    {% assign url_key = "item-" | append: i | append: "-url" %}
                    {% assign menu_key = "menu-item-" | append: i %}
                    {% assign additional_label = "item-" | append: i | append: "-additional-label" %}
                  
                    {% assign label = block.settings[label_key] %}
                    {% assign url = block.settings[url_key] %}
                    {% assign menu = block.settings[menu_key] %}
                    {% assign additional_label = block.settings[additional_label] %}
                  {% if label != blank %}
                    <li class="submenu-items-name {% if menu != blank %}submenu-with-children{% endif %}"
                     submenu-order="1"
                     target-id="{{ label }}"
                     submenu-items="{{ menu }}"
                      additional-label="{{ additional_label }}"
                     block-id="{{ block.id }}">
                     <a href="{% if menu != blank %}#{% else %}{{url }}{% endif %}">
                      {{ label }}
                    </a>
                     
                    </li>
                  {% endif %}
                  
                  
                {% endfor %}
            
              </ul>
            </div>
            <ul class="submenu__items links-with-icon">
              <li><a href="#"><span class="__icon"><img src="https://cdn.shopify.com/s/files/1/0859/1186/3592/files/sell.svg?v=1752660278" alt="icon"></span><span class="__label">Special Offers</span></a></li>
              <li><a href="#"><span class="__icon"><img src="https://cdn.shopify.com/s/files/1/0859/1186/3592/files/sell.svg?v=1752660278" alt="icon"></span><span class="__label">Special Offers</span></a></li>
              <li><a href="#"><span class="__icon"><img src="https://cdn.shopify.com/s/files/1/0859/1186/3592/files/sell.svg?v=1752660278" alt="icon"></span><span class="__label">Special Offers</span></a></li>
             
            </ul>
        </div>
       {% comment %}
         
       {% endcomment %}
       {% if submenu_items != blank %}
        <div class="extra-columns col-12 col-md-3 item item__1">
        <div class="item__1__group">
          <div class="submenu__heading">
              <h3 class="heading__1">{{ block.settings.item_label }}</h3>
          </div>
           <ul class=" lvl-1">
            {% for item in submenu_items %}
              <li class="submenu-items-name"  parent-menu-id=""><a href="#">{{ item }}</a></li>
            {% endfor %}
            <li class="submenu-items-name"><a href="#">Polycarbonate</a></li>
           </ul>
        </div>
        </div>
        {% endif %}
       <div class="extra-columns col-12 col-md-2 item" style="display:none;">
        
            {% assign menu_index = (1..15) %}
                {% for i in menu_index %}
                    {% assign label_key = "item-" | append: i | append: "-label" %}
                    {% assign url_key = "item-" | append: i | append: "-url" %}
                    {% assign menu_key = "menu-item-" | append: i %}
                    {% assign additional_label = "item-" | append: i | append: "-additional-label" %}
                  
                    {% assign label = block.settings[label_key] %}
                    {% assign url = block.settings[url_key] %}
                    {% assign menu = block.settings[menu_key] %}
                    {% assign additional_label = block.settings[additional_label] %}
                  {% if additional_label != blank %}
                    <ul>
                    <li class="submenu-items-name {% if menu != blank %}submenu-with-children{% endif %}"
                     submenu-order="1"
                     target-id="{{ label }}"
                     submenu-items="{{ menu }}"
                      additional-label="{{ additional_label }}"
                     block-id="{{ block.id }}">
                     <a href="{% if menu != blank %}#{% else %}{{url }}{% endif %}">
                      {{ additional_label }}
                    </a>
                    </li>
                     </ul>
                  {% endif %}
                {% endfor %}
        
       </div>
       <div id="render-submenus-{{ block.id }}"></div>
    </div>
  </div>
</submenu>
<script>
  window.menuData = window.menuData || {};
  window.menuData["{{ block.id }}"] = {};

  {% assign menu_handles_string = "" %}
  {% assign range = (1..15) %}
  {% for i in range %}
    {% assign key = "menu-item-" | append: i %}
    {% assign handle = block.settings[key] %}
  
    {% if handle != blank %}
      {% if menu_handles_string == "" %}
        {% assign menu_handles_string = handle %}
      {% else %}
        {% assign menu_handles_string = menu_handles_string | append: "," | append: handle %}
      {% endif %}
    {% endif %}
  {% endfor %}

{% assign menu_handles = menu_handles_string | split: "," %}
  {% for menu_handle in menu_handles %}
    window.menuData["{{ block.id }}"]["{{ menu_handle }}"] = {
      title: "{{ menu_handle }}",
      items: [
        {% assign main_menu = linklists[menu_handle] %}
        {% for top_link in main_menu.links %}
          {
            title: "{{ top_link.title | escape }}",
            url: "{{ top_link.url }}",
            children: [
              {% for child_link in top_link.links %}
                {
                  title: "{{ child_link.title | escape }}",
                  url: "{{ child_link.url }}",
                  children: [
                    {% for subchild_link in child_link.links %}
                      {
                        title: "{{ subchild_link.title | escape }}",
                        url: "{{ subchild_link.url }}"
                      }{% unless forloop.last %},{% endunless %}
                    {% endfor %}
                  ]
                }{% unless forloop.last %},{% endunless %}
              {% endfor %}
            ]
          }{% unless forloop.last %},{% endunless %}
        {% endfor %}
      ]
    };
  {% endfor %}

</script>


{% javascript %}
document.addEventListener('DOMContentLoaded', () => {
  const allMenus = window.menuData;

  Object.entries(allMenus).forEach(([blockId, menus]) => {
    
    function renderSubmenu(menu) {
      let html = `
        <div class="col-12 col-md-3 item item__2 w-300px level-2 lvl-2" menu-name="${menu.title}-${blockId}" submenu-order="2">
          <div class="item__1__group">
            <div class="submenu__heading heading__1">
              <h3 class="uppercase">${menu.title}</h3>
            </div>
            <ul class="submenu__items level-2 submenu-inner">
      `;

      menu.items.forEach(top => {
        let additionalClass1 = top.children?.length ? "submenu-with-children" : "";
        html += `
          <li class="${additionalClass1}" submenu-order="2">
            <a href="${top.url}">${top.title}</a>
        `;

        if (top.children?.length) {
          html += `
            <div class="submenu-items-container style-2 w-300px lvl-3" submenu-order="3">
              <div class="submenu__heading"><h3>${top.title}</h3></div>
              <ul class="submenu__items item">
          `;

          top.children.forEach(child => {
            let additionalClass = child.children?.length ? "submenu-with-children" : "";
            html += `<li submenu-order="3" class="has-third-level ${additionalClass}"><a href="${child.url}">${child.title}</a>`;

            if (child.children?.length) {
              html += `
                <ul class="style-2 w-300px submenu-items-container lvl-4" submenu-order="4">
                  <div class="submenu__heading"><h3>${child.title}</h3></div>
              `;
              child.children.forEach(sub => {
                html += `<li submenu-order="4" class="menu-item-last-child"><a href="${sub.url}">${sub.title}</a></li>`;
              });
              html += `</ul>`;
            }

            html += `</li>`;
          });

          html += `</ul></div>`;
        }

        html += `</li>`;
      });

      html += `</ul></div></div>`;
      return html;
    }
    let renderedHTML = '';
    Object.values(menus).forEach(menu => {
      renderedHTML += renderSubmenu(menu);
    });
    const container = document.getElementById(`render-submenus-${blockId}`);
      if (container) container.innerHTML = renderedHTML;
    });

  const triggerItems = document.querySelectorAll(`.submenu-items-name`);
  const allSubmenus = document.querySelectorAll('.item__2[menu-name]');
  triggerItems.forEach(trigger => {
    trigger.addEventListener('click', (e) => {
      const menuKey = trigger.getAttribute('submenu-items');
      const block_id = trigger.getAttribute('block-id');

      // Hide all
      allSubmenus.forEach(sub => {
        sub.style.display = 'none';
      });

      // Show only the matched one
      const target = document.querySelector(`.item__2[menu-name="${menuKey}-${block_id}"]`);
      // console.log(target)
      if (target) {
        target.style.display = 'block';
      }
    });
  });
  let currentMenuActive = '';
  function loadSubmenuItems(){
    allSubmenus.forEach(sub => sub.style.display = 'none');
    let submenuChildrens = document.querySelectorAll('.submenu-with-children');
    submenuChildrens.forEach((item)=>{
      item.addEventListener('click',function(e){
        // e.preventDefault();
        if(e.target.classList.contains('submenu-items-name')){
          removeActiveClass();
          e.target.classList.add('activeMenuItem')
        }
        currentMenuActive = e.target.getAttribute('submenu-order');
        let submenu = e.target.querySelector('.submenu-items-container');
        ReloadSubmenu(currentMenuActive);
        // console.log(submenu)
        if (submenu) {
          submenu.style.display = 'block';
        }
      })
    })
  }
  loadSubmenuItems();
  function removeActiveClass(){
    let submenuChildrens = document.querySelectorAll('.submenu-items-name');
    submenuChildrens.forEach((item)=>{
       item.classList.remove('activeMenuItem')
    })
  }
  function clearSubmenuActive(exceptItem) {
  submenuChildrens.forEach((item) => {
    if (item !== exceptItem) {
      let submenu = item.querySelector('.submenu-items-container');
      if (submenu) submenu.style.display = 'none';
    }
  });
  }
  function ReloadSubmenu(activeMenu){
     if(activeMenu == '2'){
       hideSubmenuContainer(document.querySelectorAll(".lvl-3"))
       hideSubmenuContainer(document.querySelectorAll(".lvl-4"))
     }
     else if(activeMenu == '3'){
       hideSubmenuContainer(document.querySelectorAll(".lvl-4"))
     }
    else if(activeMenu == '1'){
       // hideSubmenuContainer(document.querySelectorAll(".lvl-2"))
       // hideSubmenuContainer(document.querySelectorAll(".lvl-3"))
       // hideSubmenuContainer(document.querySelectorAll(".lvl-4"))
      
    }else{
      console.log('active undefined')
    }
    }
  function hideSubmenuContainer(Elements){
    Elements.forEach(el => {
          el.style.display = "none";
      });
  }
  AddhoverEffects()
function AddhoverEffects() {
  let liElements = document.querySelectorAll('.submenu .row .item .submenu__items.submenu-inner li');

  liElements.forEach((element) => {
    element.addEventListener('mouseover', function (e) {
      // Remove 'active-list' from all items
      liElements.forEach(el => el.classList.remove('active-list'));

      // Add 'active-list' to the currently hovered item
      e.currentTarget.classList.add('active-list');
    });
  });
}

});

{% endjavascript %}
