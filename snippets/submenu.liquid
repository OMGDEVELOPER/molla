{% style %}
  .submenu__items,
  .submenu-subitems {
    list-style: none;
    margin: 0;
    padding: 0;
  }

  .submenu__items > li,
  .submenu-subitems > li {
    /* position: relative; */
  }

  .submenu-subitems,
  .style-2,
  .submenu-subitems-inner {
    /* display: none; */
    position: absolute;
    top: 0;
    left: 100%;
    background: white;
    padding: 1rem;
    min-width: 220px;
    z-index: 10;
  }

  .submenu__items > li:hover > .style-2,
  .style-2 .submenu__items > li:hover > .submenu-subitems {
    /* display: block; */
  }

  .submenu-subitems-inner {
    left: 100%;
    top: 0;
  }

  /* Add transition for smoothness */
  .style-2,
  .submenu-subitems,
  .submenu-subitems-inner {
    transition: opacity 0.2s ease, visibility 0.2s ease;
  }
  .uppercase{
    text-transform:uppercase;
  }
{% endstyle %}
<submenu>
  <div class="submenu container {{ block.id }}" id="{{ block.id }}">
    <div class="row">
      <div class="col-12 col-md-3 item">
        <div class="submenu__heading"><h3>OUR PRODUCTS</h3></div>
        <ul class="submenu__items menu-list">
          {% if block.settings.item-1-label != blank %}
            <li target-id="{{ block.settings.item-1-label | handle }}-{{ block.id }}" submenu-items="{{ block.settings.menu-item-1 }}">
              <a href="#">{{ block.settings.item-1-label }}</a>
            </li>
          {% endif %}
          {% if block.settings.item-2-label != blank %}
            <li target-id="{{ block.settings.item-2-label | handle }}-{{ block.id }}" submenu-items="{{ block.settings.menu-item-2 }}">
              <a href="#">{{ block.settings.item-2-label }}</a>
            </li>
          {% endif %}
        </ul>
      </div>
      <div id="render-submenus" class="col-12 col-md-9"></div>
    </div>
  </div>
</submenu>
<script>
  window.menuData = {};
  {% assign menu_handles = block.settings.menu-item-1 | append: "," | append: block.settings.menu-item-2 | split: "," %}
  {% for menu_handle in menu_handles %}
    window.menuData["{{ menu_handle }}"] = {
      title: "{{ menu_handle }}",
      items: [
        {% assign main_menu = linklists[menu_handle] %}
        {% for top_link in main_menu.links %}
          {
            title: "{{ top_link.title | escape }}",
            url: "{{ top_link.url }}",
            children: [
              {% for child_link in top_link.links %}
                {
                  title: "{{ child_link.title | escape }}",
                  url: "{{ child_link.url }}",
                  children: [
                    {% for subchild_link in child_link.links %}
                      {
                        title: "{{ subchild_link.title | escape }}",
                        url: "{{ subchild_link.url }}"
                      }{% unless forloop.last %},{% endunless %}
                    {% endfor %}
                  ]
                }{% unless forloop.last %},{% endunless %}
              {% endfor %}
            ]
          }{% unless forloop.last %},{% endunless %}
        {% endfor %}
      ]
    };
  {% endfor %}
</script>


{% javascript %}
document.addEventListener('DOMContentLoaded', () => {
  const menus = window.menuData;
  const submenuContainer = document.getElementById('render-submenus');
  const menuTriggers = document.querySelectorAll('.submenu__items li[target-id]');

  function renderSubmenu(menu, id) {
    let html = `<div class="submenu-panel" id="${id}" style="display:none;">
      <div class="submenu__heading"><h3>${menu.title}</h3></div>
      <ul class="submenu__items">`;

    menu.items.forEach(top => {
      html += `<li>
        <a href="${top.url}">${top.title}</a>`;
      if (top.children && top.children.length > 0) {
        html += `<ul class="submenu__items child">`;
        top.children.forEach(child => {
          html += `<li><a href="${child.url}">${child.title}</a>`;
          if (child.children && child.children.length > 0) {
            html += `<ul class="submenu__items subchild">`;
            child.children.forEach(sub => {
              html += `<li><a href="${sub.url}">${sub.title}</a></li>`;
            });
            html += `</ul>`;
          }
          html += `</li>`;
        });
        html += `</ul>`;
      }
      html += `</li>`;
    });

    html += `</ul></div>`;
    return html;
  }

  // Render all submenu panels initially hidden
  Object.entries(menus).forEach(([handle, menu]) => {
    const id = menu.title.replace(/\s+/g, '-').toLowerCase() + '-{{ block.id }}';
    submenuContainer.innerHTML += renderSubmenu(menu, id);
  });

  function hideAllPanels() {
    document.querySelectorAll('.submenu-panel').forEach(panel => {
      panel.style.display = 'none';
    });
  }

  // Click event for menu items
  menuTriggers.forEach(item => {
    item.addEventListener('click', () => {
      const targetId = item.getAttribute('target-id');
      hideAllPanels();
      const targetPanel = document.getElementById(targetId);
      if (targetPanel) targetPanel.style.display = 'block';
    });
  });
});
{% endjavascript %}

<script>
  document.querySelectorAll('.has-second-level').forEach(item => {
    let timer;

    item.addEventListener('mouseenter', () => {
      clearTimeout(timer);
      const submenu = item.querySelector('.style-2');
      submenu && (submenu.style.display = 'block');
    });

    item.addEventListener('mouseleave', () => {
      const submenu = item.querySelector('.style-2');
      timer = setTimeout(() => {
        submenu && (submenu.style.display = 'none');
      }, 300); // delay in ms
    });
  });

  document.querySelectorAll('.has-third-level').forEach(item => {
    let timer;

    item.addEventListener('mouseenter', () => {
      clearTimeout(timer);
      const submenu = item.querySelector('.submenu-subitems-inner');
      submenu && (submenu.style.display = 'block');
    });

    item.addEventListener('mouseleave', () => {
      const submenu = item.querySelector('.submenu-subitems-inner');
      timer = setTimeout(() => {
        submenu && (submenu.style.display = 'none');
      }, 300);
    });
  });
</script>


